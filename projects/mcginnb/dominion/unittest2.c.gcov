        -:    0:Source:unittest2.c
        -:    0:Graph:unittest2.gcno
        -:    0:Data:unittest2.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:// Code framework comes form cardtest4.c and playdom.c in order to set the game up as both 
        -:    2:// a basic initialized game, and a game which has had several turns. 
        -:    3:// Purpose: This tests the getCostTest() function
        -:    4:// Name: Bridget McGinn
        -:    5:// CS362
        -:    6:
        -:    7:#include "dominion.h"
        -:    8:#include "dominion_helpers.h"
        -:    9:#include <string.h>
        -:   10:#include <stdio.h>
        -:   11:#include <assert.h>
        -:   12:#include "rngs.h"
        -:   13:#include <stdlib.h>
        -:   14:
        -:   15:
function main called 1 returned 100% blocks executed 67%
        -:   16:int main() {
        -:   17:
        1:   18:	printf("----------------- Testing Function getCost() --------------- \n");
        1:   19:	printf("\nCheck cards 0-26\n");
        -:   20:
        1:   21:	if (getCost(0)== 0)
branch  0 taken 100%
branch  1 taken 0%
        -:   22:	{
        1:   23:		printf("0. TEST PASSED\n");
        1:   24:	}
        -:   25:	else
        -:   26:	{
    #####:   27:		printf("0.TEST FAILED\n");
        -:   28:	}
        1:   29:	if (getCost(1)== 2)
branch  0 taken 100%
branch  1 taken 0%
        -:   30:	{
        1:   31:		printf("1.TEST PASSED\n");
        1:   32:	}
        -:   33:	else
        -:   34:	{
    #####:   35:		printf("1.TEST FAILED\n");
        -:   36:	}
        1:   37:	if (getCost(2)== 5)
branch  0 taken 100%
branch  1 taken 0%
        -:   38:	{
        1:   39:		printf("2.TEST PASSED\n");
        1:   40:	}
        -:   41:	else
        -:   42:	{
    #####:   43:		printf("2.TEST FAILED\n");
        -:   44:	}
        1:   45:	if (getCost(3)== 8)
branch  0 taken 100%
branch  1 taken 0%
        -:   46:	{
        1:   47:		printf("3.TEST PASSED\n");
        1:   48:	}
        -:   49:	else
        -:   50:	{
    #####:   51:		printf("3.TEST FAILED\n");
        -:   52:	}
        1:   53:	if (getCost(4)== 0)
branch  0 taken 100%
branch  1 taken 0%
        -:   54:	{
        1:   55:		printf("4.TEST PASSED\n");
        1:   56:	}
        -:   57:	else
        -:   58:	{
    #####:   59:		printf("4.TEST FAILED\n");
        -:   60:	}
        1:   61:	if (getCost(5)== 3)
branch  0 taken 100%
branch  1 taken 0%
        -:   62:	{
        1:   63:		printf("5.TEST PASSED\n");
        1:   64:	}
        -:   65:	else
        -:   66:	{
    #####:   67:		printf("5.TEST FAILED\n");
        -:   68:	}
        1:   69:	if (getCost(6)== 6)
branch  0 taken 100%
branch  1 taken 0%
        -:   70:	{
        1:   71:		printf("6.TEST PASSED\n");
        1:   72:	}
        -:   73:	else
        -:   74:	{
    #####:   75:		printf("6.TEST FAILED\n");
        -:   76:	}
        1:   77:	if (getCost(7)== 6)
branch  0 taken 100%
branch  1 taken 0%
        -:   78:	{
        1:   79:		printf("7.TEST PASSED\n");
        1:   80:	}
        -:   81:	else
        -:   82:	{
    #####:   83:		printf("7.TEST FAILED\n");
        -:   84:	}
        1:   85:	if (getCost(8)== 5)
branch  0 taken 100%
branch  1 taken 0%
        -:   86:	{
        1:   87:		printf("8.TEST PASSED\n");
        1:   88:	}
        -:   89:	else
        -:   90:	{
    #####:   91:		printf("8.TEST FAILED\n");
        -:   92:	}
        1:   93:	if (getCost(9)== 4)
branch  0 taken 100%
branch  1 taken 0%
        -:   94:	{
        1:   95:		printf("9.TEST PASSED\n");
        1:   96:	}
        -:   97:	else
        -:   98:	{
    #####:   99:		printf("9.TEST FAILED\n");
        -:  100:	}
        1:  101:	if (getCost(10)== 4)
branch  0 taken 100%
branch  1 taken 0%
        -:  102:	{
        1:  103:		printf("10.TEST PASSED\n");
        1:  104:	}
        -:  105:	else
        -:  106:	{
    #####:  107:		printf("10.TEST FAILED\n");
        -:  108:	}
        1:  109:	if (getCost(11)== 5)
branch  0 taken 100%
branch  1 taken 0%
        -:  110:	{
        1:  111:		printf("11.TEST PASSED\n");
        1:  112:	}
        -:  113:	else
        -:  114:	{
    #####:  115:		printf("11.TEST FAILED\n");
        -:  116:	}
        1:  117:	if (getCost(12)== 4)
branch  0 taken 100%
branch  1 taken 0%
        -:  118:	{
        1:  119:		printf("12.TEST PASSED\n");
        1:  120:	}
        -:  121:	else
        -:  122:	{
    #####:  123:		printf("12.TEST FAILED\n");
        -:  124:	}
        1:  125:	if (getCost(13)== 4)
branch  0 taken 100%
branch  1 taken 0%
        -:  126:	{
        1:  127:		printf("13.TEST PASSED\n");
        1:  128:	}
        -:  129:	else
        -:  130:	{
    #####:  131:		printf("13.TEST FAILED\n");
        -:  132:	}
        1:  133:	if (getCost(14)== 3)
branch  0 taken 100%
branch  1 taken 0%
        -:  134:	{
        1:  135:		printf("14.TEST PASSED\n");
        1:  136:	}
        -:  137:	else
        -:  138:	{
    #####:  139:		printf("14.TEST FAILED\n");
        -:  140:	}
        1:  141:	if (getCost(15)== 4)
branch  0 taken 100%
branch  1 taken 0%
        -:  142:	{
        1:  143:		printf("15.TEST PASSED\n");
        1:  144:	}
        -:  145:	else
        -:  146:	{
    #####:  147:		printf("15.TEST FAILED\n");
        -:  148:	}
        1:  149:	if (getCost(16)== 3)
branch  0 taken 100%
branch  1 taken 0%
        -:  150:	{
        1:  151:		printf("16.TEST PASSED\n");
        1:  152:	}
        -:  153:	else
        -:  154:	{
    #####:  155:		printf("16.TEST FAILED\n");
        -:  156:	}
        1:  157:	if (getCost(17)== 5)
branch  0 taken 100%
branch  1 taken 0%
        -:  158:	{
        1:  159:		printf("17.TEST PASSED\n");
        1:  160:	}
        -:  161:	else
        -:  162:	{
    #####:  163:		printf("17.TEST FAILED\n");
        -:  164:	}
        1:  165:	if (getCost(18)== 3)
branch  0 taken 100%
branch  1 taken 0%
        -:  166:	{
        1:  167:		printf("18.TEST PASSED\n");
        1:  168:	}
        -:  169:	else
        -:  170:	{
    #####:  171:		printf("18.TEST FAILED\n");
        -:  172:	}
        1:  173:	if (getCost(19)== 5)
branch  0 taken 100%
branch  1 taken 0%
        -:  174:	{
        1:  175:		printf("19.TEST PASSED\n");
        1:  176:	}
        -:  177:	else
        -:  178:	{
    #####:  179:		printf("19.TEST FAILED\n");
        -:  180:	}
        1:  181:	if (getCost(20)== 3)
branch  0 taken 100%
branch  1 taken 0%
        -:  182:	{
        1:  183:		printf("20.TEST PASSED\n");
        1:  184:	}
        -:  185:	else
        -:  186:	{
    #####:  187:		printf("20.TEST FAILED\n");
        -:  188:	}
        1:  189:	if (getCost(21)== 4)
branch  0 taken 100%
branch  1 taken 0%
        -:  190:	{
        1:  191:		printf("21.TEST PASSED\n");
        1:  192:	}
        -:  193:	else
        -:  194:	{
    #####:  195:		printf("21.TEST FAILED\n");
        -:  196:	}
        1:  197:	if (getCost(22)== 2)
branch  0 taken 100%
branch  1 taken 0%
        -:  198:	{
        1:  199:		printf("22.TEST PASSED\n");
        1:  200:	}
        -:  201:	else
        -:  202:	{
    #####:  203:		printf("22.TEST FAILED\n");
        -:  204:	}
        1:  205:	if (getCost(23)== 5)
branch  0 taken 100%
branch  1 taken 0%
        -:  206:	{
        1:  207:		printf("23.TEST PASSED\n");
        1:  208:	}
        -:  209:	else
        -:  210:	{
    #####:  211:		printf("23.TEST FAILED\n");
        -:  212:	}
        1:  213:	if (getCost(24)== 4)
branch  0 taken 100%
branch  1 taken 0%
        -:  214:	{
        1:  215:		printf("24.TEST PASSED\n");
        1:  216:	}
        -:  217:	else
        -:  218:	{
    #####:  219:		printf("24.TEST FAILED\n");
        -:  220:	}
        1:  221:	if (getCost(25)== 4)
branch  0 taken 100%
branch  1 taken 0%
        -:  222:	{
        1:  223:		printf("25.TEST PASSED\n");
        1:  224:	}
        -:  225:	else
        -:  226:	{
    #####:  227:		printf("25.TEST FAILED\n");
        -:  228:	}
        1:  229:	if (getCost(26)== 4)
branch  0 taken 100%
branch  1 taken 0%
        -:  230:	{
        1:  231:		printf("26.TEST PASSED\n");
        1:  232:	}
        -:  233:	else
        -:  234:	{
    #####:  235:		printf("26.TEST FAILED\n");
        -:  236:	}
        -:  237:	
        -:  238:
        1:  239:	printf("\nCheck out of bounds cards\n");
        -:  240:	
        1:  241:	if(getCost(27)== -1)
branch  0 taken 100%
branch  1 taken 0%
        -:  242:	{
        1:  243:		printf("TEST PASSED\n\n");
        1:  244:	}
        -:  245:	else
        -:  246:	{
    #####:  247:		printf("TEST FAILED\n\n");
        -:  248:	}
        1:  249:}
        -:  250:
        -:  251:
